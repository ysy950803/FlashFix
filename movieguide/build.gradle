apply plugin: 'com.android.application'

def getProperty(String filename, String propName) {
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] != null) {
            return props[propName]
        } else {
            print("No such property " + propName + " in file " + filename)
        }
    } else {
        print(filename + " does not exist!")
    }
}

android {
    compileSdkVersion 27

    defaultConfig {
        applicationId "com.ysy.movieguide"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 2
        versionName "3.0.7"

        buildConfigField "String", "TMDB_API_KEY", "\"${getProperty("local.properties", "tmdb_api_key")}\""
        buildConfigField "String", "TMDB_BASE_URL", "\"http://api.themoviedb.org/\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/rxjava.properties'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

ext {
    supportLibVersion = '27.1.1'
    okhttpVersion = '3.9.0'
    daggerVersion = '2.5'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Support
    implementation "com.android.support:design:${supportLibVersion}"
    implementation "com.android.support:support-v4:${supportLibVersion}"
    implementation "com.android.support:support-annotations:${supportLibVersion}"
    implementation "com.android.support:palette-v7:${supportLibVersion}"
    implementation "com.android.support:recyclerview-v7:${supportLibVersion}"
    implementation "com.android.support:cardview-v7:${supportLibVersion}"

    // Rx
    implementation 'io.reactivex.rxjava2:rxjava:2.1.2'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    // Network
    implementation "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"
    implementation 'com.github.bumptech.glide:glide:4.2.0'

    // Other
    implementation 'net.jcip:jcip-annotations:1.0'
    implementation 'com.squareup.moshi:moshi:1.4.0'
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    // Dependency Injection
    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    implementation "com.google.dagger:dagger:${daggerVersion}"
    compileOnly 'javax.annotation:jsr250-api:1.0'

    // Retrofit 2
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.3.0'
}
